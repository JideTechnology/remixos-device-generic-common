#!/system/bin/sh

PATH=/system/bin:/system/xbin

houdini_bin=0
dest_dir=/system/lib$1/arm$1
binfmt_misc_dir=/proc/sys/fs/binfmt_misc

cd $dest_dir

if [ ! -s libhoudini.so ]; then
	if touch .dl_houdini; then
		rm -f .dl_houdini
	else
		cd .. && cp -a arm$1 /data/local/tmp
		mount -t tmpfs tmpfs arm$1 && cd arm$1 &&
			cp -a /data/local/tmp/arm$1/* . && rm -rf /data/local/tmp/arm$1
	fi
fi

cd /data/local/tmp
while [ ! -s $dest_dir/libhoudini.so ]; do
	while [ "$(getprop net.dns1)" = "" ]; do
		sleep 10
	done
	if [ -z "$1" ]; then
		[ "`uname -m`" = "x86_64" ] && cp /system/etc/houdini.tgz . || cp /system/etc/houdini.tgz .
	else
		cp /system/etc/etc/houdini_64.tgz .
	fi
	bzcat houdini.tgz | tar xvf - -C $dest_dir && rm -f houdini.tgz && break
	rm -f houdini.tgz
	sleep 30
done


# if you don't see the files 'register' and 'status' in /proc/sys/fs/binfmt_misc
# then run the following command:
# mount -t binfmt_misc none /proc/sys/fs/binfmt_misc

# this is to add the supported binary formats via binfmt_misc

if [ ! -e $binfmt_misc_dir/register ]; then
	mount -t binfmt_misc none $binfmt_misc_dir
fi

cd $binfmt_misc_dir
if [ -e register ]; then
	# register Houdini for arm binaries
	if [ -z "$1" ]; then
		echo ':arm_exe:M::\\x7f\\x45\\x4c\\x46\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x28::'"$dest_dir/houdini:P" > register
		echo ':arm_dyn:M::\\x7f\\x45\\x4c\\x46\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x28::'"$dest_dir/houdini:P" > register
	else
		echo ':arm64_exe:M::\\x7f\\x45\\x4c\\x46\\x02\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\xb7::'"$dest_dir/houdini64:P" > register
		echo ':arm64_dyn:M::\\x7f\\x45\\x4c\\x46\\x02\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\xb7::'"$dest_dir/houdini64:P" > register
	fi
	if [ -e arm${1}_exe ]; then
		houdini_bin=1
	fi
else
	log -pe -thoudini "No binfmt_misc support"
fi

if [ $houdini_bin -eq 0 ]; then
	log -pe -thoudini "houdini$1 enabling failed!"
else
	log -pi -thoudini "houdini$1 enabled"
fi

[ "$(getprop ro.zygote)" = "zygote64_32" -a -z "$1" ] && exec $0 64

exit 0
